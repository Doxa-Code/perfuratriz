// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "."
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model NCM {
  ncmId  String @id @default(uuid())
  id     String
  code   Int
  tax    Int
  icms   Int
  pis    Int
  cofins Int
  ipi    Int

  event        Events   @default(CREATED)
  enable       Boolean  @default(false)
  registeredAt DateTime @default(now())

  @@map("ncms")
}

enum Events {
  CREATED
  UPDATED
  DELETED
}

model Product {
  productId   String @id @default(uuid())
  id          String
  name        String @default("")
  tid         String @default("")
  description String @default("")
  weight      Int
  length      Int
  height      Int
  width       Int
  ncmId       String

  event        Events   @default(CREATED)
  enable       Boolean  @default(false)
  registeredAt DateTime @default(now())

  @@map("products")
}

model Invoice {
  invoiceId    String   @id @default(uuid())
  id           String
  registration String
  createdAt    DateTime @default(now())
  quote        Int

  event        Events   @default(CREATED)
  enable       Boolean  @default(false)
  registeredAt DateTime @default(now())

  @@map("invoices")
}

model InvoiceProduct {
  invoiceProductId String @id @default(uuid())

  id        String
  productId String
  invoiceId String
  amount    Int
  quantity  Int

  event        Events   @default(CREATED)
  enable       Boolean  @default(false)
  registeredAt DateTime @default(now())

  @@map("invoice_products")
}

model Expense {
  id               String           @id @default(uuid())
  name             String
  useICMSBase      Boolean          @default(false)
  useCustomsBase   Boolean          @default(false)
  allocationMethod AllocationMethod
  currency         Currency

  @@map("expenses")
}

enum AllocationMethod {
  NET_WEIGHT
  NET_VALUE
  PER_UNIT
}

enum Currency {
  USD
  BRL
}

model Declaration {
  id           String              @id @default(uuid())
  registration String
  quote        Float
  createdAt    DateTime            @default(now())
  invoice      DeclarationInvoice? @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId    String              @unique

  expenses DeclarationExpense[]

  event        Events   @default(CREATED)
  enable       Boolean  @default(false)
  registeredAt DateTime @default(now())

  @@map("declarations")
}

model DeclarationExpense {
  id            String      @id @default(uuid())
  declarationId String
  declaration   Declaration @relation(fields: [declarationId], references: [id], onDelete: Cascade)

  name             String
  useICMSBase      Boolean          @default(false)
  useCustomsBase   Boolean          @default(false)
  allocationMethod AllocationMethod
  currency         Currency

  amount Float @default(0)

  @@map("declaration_expenses")
}

model DeclarationInvoice {
  id           String   @id @default(uuid())
  registration String
  createdAt    DateTime @default(now())
  quote        Float

  declaration Declaration?
  products    DeclarationInvoiceProduct[]

  @@map("declaration_invoices")
}

model DeclarationInvoiceProduct {
  id        String             @id @default(uuid())
  invoiceId String
  invoice   DeclarationInvoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  name        String @default("")
  tid         String @default("")
  description String @default("")
  weight      Float
  length      Float
  height      Float
  width       Float

  ncms DeclarationInvoiceProductNCM[]

  @@map("declaration_invoice_products")
}

model DeclarationInvoiceProductNCM {
  id        String                    @id @default(uuid())
  productId String
  product   DeclarationInvoiceProduct @relation(fields: [productId], references: [id], onDelete: Cascade)

  code   Float
  tax    Float
  icms   Float
  pis    Float
  cofins Float
  ipi    Float

  @@map("declaration_invoice_product_ncms")
}
